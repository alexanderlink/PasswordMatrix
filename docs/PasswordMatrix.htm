<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<link href="https://use.fontawesome.com/releases/v5.0.8/css/all.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
  
  <style>
  body {
    font-size: 16pt;
    font-weight: bolder;
    font-family: "Lucida Console", Monaco, monospace;
  }
  #full {
    font-size: 14pt;
    border-style: solid;
    border-width: 1px;
  }
  #textarea, textareaExcel {
    font-size: 14pt;
    width: 280px;
    height: 280px;
    border-style: solid;
    border-width: 1px;
  }
  .cell {
    vertical-align: middle;
    text-align: center;
    border-style: solid;
    border-width: 1px;
    border-color: #ddd;
    width: 1%;
    height: 1%;
  }
  .col {
    font-size: 24pt;
    vertical-align: middle;
    text-align: center;
    border-style: none;
    padding: 0px;
    width: 100%;
    height: 100%;
  }
  .col0 {
    background-color: #ffffff;
  }
  .col1 {
    background-color: #f0f0f0;
  }
  .btn-alx {
    margin: 3px;
  }
  </style>
  <title>ALX Password Matrix</title>
</head>
<body>
<div class="container">

  <div class="row">
    <div class="col-md-12" style="text-align:left">
      <h2>ALX Password Matrix</h2>
    </div>
  </div>


  <div id="textfielddiv" class="row collapse">
      <textarea id="full" class="col-xs-12"></textarea>
      <br/><br/><br/>
  </div>

    <div class="row" id="matrixContainer">
      <div id="matrix" class="container-fluid matrix"></div>
    </div>
  
    <div class="row" style="margin-left:-15px;">
      <button class="btn btn-alx btn-success" id="0-9" title="Regenerate matrix with those character types" data-toggle="tooltip">0-9</button>	
      <button class="btn btn-alx btn-success" id="a-z" title="Regenerate matrix with those character types" data-toggle="tooltip">a-z</button>
      <button class="btn btn-alx btn-success" id="A-Za-z" title="Regenerate matrix with those character types" data-toggle="tooltip">A-Za-z</button>
      <button class="btn btn-alx btn-success" id="A-Za-z0-9" title="Regenerate matrix with those character types" data-toggle="tooltip">A-Za-z0-9</button>
      <button class="btn btn-alx btn-success" id="A-Za-z0-9Sonder" title="Regenerate matrix with those character types" data-toggle="tooltip">A-Za-z0-9$?%</button>
      <div class="btn-group btn-alx">
        <button id="copyToClipboardButton1" type="button" class="btn btn-danger" title="Copy Matrix to clipboard" data-toggle="tooltip"><i class="far fa-copy"></i></button>
        <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <span class="sr-only">Toggle Dropdown</span>
        </button>
        <div class="dropdown-menu">
          <a id="copyToClipboardButton2" class="dropdown-item" href="#">Copy Matrix</a>
          <a id="copyToClipboardButton3" class="dropdown-item" href="#">Copy Matrix (single line)</a>
          <a id="copyToClipboardButton4" class="dropdown-item" href="#">Copy Matrix (to Excel)</a>
        </div>
      </div>
    </div>

  <div class="row form-group" style="text-align:left; margin-top: 10px;">
    <label for="numberChars" class="col-form-label">Number of characters in password:</label>
    <input type="text" class="form-control" style="width:60px;text-align:center;margin-left:10px;" id="numberChars" value="12">
  </div>
  <div class="row form-group" style="text-align:left; margin-top: 10px;">
    <label for="grid_width" class="col-form-label">Grid size:</label>
    <select id="grid_width" class="form-control" style="width:120px;">
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
        <option value="10">10</option>
    </select>
</div>

  <div id="textareadiv" class="row collapse">
    <div  class="col-sm-3">
      <textarea id="textarea" readonly cols="30" rows="20"></textarea>
	</div>
    <div  class="col-sm-9">
      <textarea id="textareaExcel" readonly cols="60" rows="20"></textarea>
    </div>
  </div>
  
</div>

    <script>

    var GRID_WIDTH = 7;

    function random(nr, chars) {
      var result = "";
      for(var i = 0; i < nr; i++) {
        result += chars.charAt(Math.floor((Math.random() * chars.length)));
      }
      $('#full').val(result);
      inputFieldChanged();
    }
    
    function matrixChanged() {
      updateInputField();
      populateTextArea();
    }    

    function inputFieldChanged() {
      populateMatrix();
      populateTextArea();
    }    
    
    function updateInputField() {
      var full = $('#full');
      full.val('');
      for(var i = 0; i < 1000; i++) {
        var cell = $('#col'+i);
        if(cell.length <= 0) break;
        if(!cell.val()) alert("No value in cell " + i);
        full.val(full.val() + cell.val());
      }
    }
    
    function populateMatrix() {
      var full = $('#full');
      var matrix = $('#matrix');
      matrix.empty();
      var fullText = full.val();
      var table = $("<table>", {id: "table", class: "table"});
      matrix.append(table);
      for (var i = 0; i < fullText.length; i++) {
        if(i % GRID_WIDTH == 0) {
          var row = $("<tr>", {id: "row"+i, class: "row"});
          table.append(row);
        }
        var cell = $("<td>", {id: "cell"+i, class: "cell col" + i%2});
        var cellInput = $("<input>", {maxlength: "1", id: "col"+i, class: "col col" + i%2, title: "Click to change this field", "data-toggle": "tooltip"});
        cellInput.val(fullText[i]);
        cellInput.keyup(matrixChanged);
        cellInput.click(function(e) {e.target.select()});
        cell.append(cellInput);
        row.append(cell);
      }
      $('[data-toggle="tooltip"]').tooltip();
      resizeMatrix();
    }
    
    function resizeMatrix() {
      var containerWidth = $("#matrixContainer").width();
      var documentHeight = $(document).height() - 200;
      var tablePx = Math.min(containerWidth, documentHeight);
      var cellPx = tablePx / GRID_WIDTH;
      $("#table").css({"width": tablePx, "height": tablePx});
      $(".cell").css({"height": cellPx, "width": cellPx});
      //$(window).resize(resizeMatrix);
    }
    
    function getMatrixAsText() {
      var full = $('#full');
      var fullText = full.val();
      var result = '';
      for (var i = 0; i < fullText.length; i++) {
        if(i > 0 && i % GRID_WIDTH == 0) {
          result += '\n';
        } else if(result.length > 0) {
		      result += ' ';
    		}
        result += fullText[i];
      }
      return result;
    }

    function populateTextArea() {
      var text = getMatrixAsText();
      var textarea = $('#textarea');
      textarea.val(text);

      var numberChars = $('#numberChars').val();
      if(numberChars > 0) textarea.val(textarea.val() + "\n\n(" + numberChars + " characters)");

      textarea.click(function(e) {e.target.select()});
  	  populateTextAreaExcel();
    }

    function populateTextAreaExcel() {
      var full = $('#full');
      var textarea = $('#textareaExcel');
      textarea.val('');
      var fullText = full.val();
      for (var i = 0; i < fullText.length; i++) {
        if(i > 0 && i % GRID_WIDTH == 0) {
          textarea.val(textarea.val() + '\n');
        } else if(textarea.val().length > 0) {
        textarea.val(textarea.val() + '\t');
      }
      var c = fullText[i];
      if(c === '\"') {
        textarea.val(textarea.val() + '=""""');
      } else {
        textarea.val(textarea.val() + '="' + c + '"');
      }
        textarea.click(function(e) {e.target.select()});
      }
    }
	
    function setVisibility(id, show) {
      if(show) {
        $(id).css('display', 'block');
        $(id).css('visibility', 'visible');
      } else {
        $(id).css('display', 'none');
        $(id).css('visibility', 'hidden');
      }
    }
	
    function copyMatrixToClipboard() {
        populateTextArea();
        setVisibility('#textareadiv', true);
        $('#textarea').select();
        document.execCommand("copy");
        setVisibility('#textareadiv', false);
    }

    function copyExcelToClipboard() {
        populateTextArea();
        setVisibility('#textareadiv', true);
        $('#textareaExcel').select();
        document.execCommand("copy");
        setVisibility('#textareadiv', false);
    }

    function copySingleLineToClipboard() {
        populateTextArea();
        setVisibility('#textfielddiv', true);
        $('#full').select();
        document.execCommand("copy");
        setVisibility('#textfielddiv', false);
    }

    $(function(){
      $('#full').val('');
      for(var i = 0; i < GRID_WIDTH*GRID_WIDTH; i++) $('#full').val($('#full').val() + ' ');
      populateMatrix();
      populateTextArea();
      $('#full').keyup(inputFieldChanged);
      $('#full').click(function(e) {e.target.select()});
      $('#0-9').click(function() { random(GRID_WIDTH*GRID_WIDTH, "0123456789"); });
      $('#a-z').click(function() { random(GRID_WIDTH*GRID_WIDTH, "abcdefghijklmnopqrstuvwxyz"); });
      $('#A-Za-z').click(function() { random(GRID_WIDTH*GRID_WIDTH, "ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"); });
      $('#A-Za-z0-9').click(function() { random(GRID_WIDTH*GRID_WIDTH, "ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz0123456789"); });
      $('#A-Za-z0-9Sonder').click(function() { random(GRID_WIDTH*GRID_WIDTH, "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz123456789~!@#$%^&*()_-+={}[]\\:;\"'<>,.?/"); });
      $('#copyToClipboardButton1').click(copyMatrixToClipboard);
      $('#copyToClipboardButton2').click(copyMatrixToClipboard);
      $('#copyToClipboardButton3').click(copySingleLineToClipboard);
      $('#copyToClipboardButton4').click(copyExcelToClipboard);
      $('#grid_width').change(function () {
        GRID_WIDTH = this.value;
        resizeMatrix();
        $('#A-Za-z0-9Sonder').click();        
      });
      $('[data-toggle="tooltip"]').tooltip();
      $('#A-Za-z0-9Sonder').click();
    });
  </script> 
  
</body>
</html>
